name: Build & Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: reeltone-env

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Build and push Docker image to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
            context: ./client
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/reeltone-client:latest
            build-args: |
                NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
                NEXT_PUBLIC_SITE_URL=${{ secrets.NEXT_PUBLIC_SITE_URL }}
                NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }}
                NEXT_PUBLIC_TMDB_BASE_IMAGE_URL=${{ secrets.NEXT_PUBLIC_TMDB_BASE_IMAGE_URL }}


      # SSH into Azure VM and deploy
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AZURE_FRONTEND_VM_IP }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            # Make sure Docker is installed
            if ! command -v docker &> /dev/null; then
                curl -fsSL https://get.docker.com | sh
            fi

            echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            # Pull the latest image
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/reeltone-client:latest

            # Stop old container (if running)
            sudo docker rm -f reeltone-client || true

            # Run new container
            sudo docker run -d \
                --name reeltone-client \
                -p 3000:3000 \
                --env-file /home/${{ secrets.AZURE_VM_USER }}/.env \
                ${{ secrets.DOCKERHUB_USERNAME }}/reeltone-client:latest

            # Clean up
            sudo docker system prune -af
